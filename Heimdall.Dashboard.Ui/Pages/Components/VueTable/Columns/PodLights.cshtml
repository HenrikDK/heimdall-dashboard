<template id="pod-lights">
  <div class="ps-4 pt-2.5 flex py-0.5" :class="classes">
    <template v-for="item in getContainerStatuses(row)">
      <div class="mr-2">
        <tooltip placement="bottom">
          <template v-slot:cell>            
            <div v-if="item.state.running" class="h-4 w-4 bg-green-500 dark:bg-green-500 rounded-sm"></div>
            <div v-if="item.state.waiting" class="h-4 w-4 bg-orange-300 dark:bg-orange-500 rounded-sm"></div>
            <div v-if="item.state.terminated" class="h-4 w-4 bg-gray-300 dark:bg-zinc-600 rounded-sm"></div>
          </template>

          <template v-slot:tooltip>
            <div v-if="item.state.running" class="p-1">
              <div class="flex mb-2">
                <div>{{ item.name }}</div>
                <div class="pl-2 text-gray-600 dark:text-gray-400">{{ item.ready ? 'ready, running' : 'running' }}</div>
              </div>
              <div class="flex">
                <div>Started At</div><div class="pl-2 text-gray-600 dark:text-gray-400">{{ item.state.running.startedAt }}</div>
              </div>
            </div>
            <div v-if="item.state.waiting">
              <div class="flex justify-center mb-2">
                <div class="pr-2">{{ item.name }}</div>
                <div class="text-orange-600 dark:text-orange-400">waiting</div>
              </div>
              <table class="border-separate border-spacing-1">
                <tr><td>Reason</td><td class="text-gray-600 dark:text-gray-400 w-64 break-words">{{ item.state.waiting.reason }}</td></tr>
                <tr><td>Message</td><td class="text-gray-600 dark:text-gray-400 w-64 break-words">{{ item.state.waiting.message }}</td></tr>
              </table>
            </div>
            <div v-if="item.state.terminated">
              <div class="flex justify-center mb-4">
                <div class="pr-2">{{ item.name }}</div><div class="text-red-600 dark:text-red-400">terminated</div>
              </div>
              <table class="border-separate border-spacing-1">
                <tr><td>Reason</td><td class="text-gray-600 dark:text-gray-400 w-64 break-words">{{ item.state.terminated.reason }}</td></tr>
                <tr><td>Exit code</td><td class="text-gray-600 dark:text-gray-400 w-64 break-words">{{ item.state.terminated.exitCode }}</td></tr>
                <tr><td>Started At</td><td class="text-gray-600 dark:text-gray-400 w-64 break-words">{{ item.state.terminated.startedAt }}</td></tr>
                <tr><td>Finished At</td><td class="text-gray-600 dark:text-gray-400 w-64 break-words">{{ item.state.terminated.finishedAt }}</td></tr>
                <tr><td>Container ID</td><td class="text-gray-600 dark:text-gray-400 w-64 break-all">{{ item.state.terminated.containerID }}</td></tr>
              </table>
            </div>
          </template>
        </tooltip>
      </div>
    </template>
  </div>
</template>

<script type="module">
let setup = (props, ctx) => {
  let getContainerStatuses = (row) => {
    let containers = row.status.containerStatuses ?? [];
    let initContainers = row.status.initContainerStatuses ?? [];
    return [...containers, ...initContainers]
  }
  
  return { getContainerStatuses }
}

components["pod-lights"] = { template: "#pod-lights", setup, 
  props: {
    row: {},
    classes: '2xl:w-52 xl:w-44 lg:w-32'
  }
};
</script>
